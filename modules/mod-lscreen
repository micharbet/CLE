##
## ** mod-lscreen: GNU screen wrapper **
#
#* version: 2024-02-15
#* author:  Michael Arbet (marbet@redhat.com)
#* home:    https://github.com/micharbet/CLE
#* license: MIT
#* Copyright (C) 2021-2024 by Michael Arbet 

## `lscreen [name]`    - gnu screen wrapper, join your recent session or start new
## `lscreen -j [name]` - join other screen sessions, ev. search by name
#: lscreen wrapper is here beacuse:
#:  1) there was no way to tell GNU screen program to start CLE on new windows
#:  2) to allow easily join detached session - it automatically searches for them
#:  3) to make it pretty and more useful with good basic configuration

lscreen () (
	#: get name of the screen to search and join
	#: base of session name is $CLE_USER and this can be extended
	SCRNAME=CLE-$CLE_USER${1:+-$1}
	[ "$1" = -j ] && SCRNAME=${2:-.}
	#: list all screens with that name and find how many of them are there
	SCREENS=`screen -ls|sed -n "/$SCRNAME/s/^[ \t]*\([0-9]*\.[^ \t]*\)[ \t]*.*/\1/p"`
	NS=`wc -w <<<$SCREENS`
	reset #: sometimes it's necessary to reset terminal
	if [ $NS = 0 ]; then
		[ "$1" = -j ] && echo "No screen to join" && return 1
		#: No session with given name found, prepare to start new session
		SCREENRC=$CLE_D/lscreenrc-main
		_clerh @ `tty` "screen -S $SCRNAME"
		# prepare own screenrc
		#: This generates configuration file with cool features:
		#:  - nice status line with list of windows, hostname and clock
		#:  - one touch window switch using Shift+Tab
		#:  - option to further customize with file $CL_DR/lscreenrc - this file is
		#:    being transferres to subsequent live session
		cat <<-EOS >$SCREENRC
			source $HOME/.screenrc	# host local screenrc
			shell $CLE_RC	 	# new windows start with CLE
			bindkey "^[[Z" next	# shortcut to next window Shift+Tab
			termcapinfo xterm* ti@:te@	# enables shift-PgUp/PgDn
			defscrollback 9000
			hardstatus alwayslastline
			hardstatus string '%{= Kk} %-w%{Wk}%n %t%{-}%+w %-=%{+b Y}$CLE_SHN%{G} %c'
			altscreen on
			autodetach on
			source $CLE_DR/lscreenrc$CLE_WS	# custom file inherited from workstation

		EOS
		screen -c $SCREENRC -S $SCRNAME $CLE_RC
	else
		#: is there only one such session or more?
		if [ $NS = 1 ]; then SCRNAME=$SCREENS
		else
			#: we found more screens with similar names, choose one!
			_clebold "${_CU}Current '$SCRNAME' sessions:"
			PS3="$_CL choose # to join: $_CN"
			select SCRNAME in $SCREENS;do
				[ $SCRNAME ] && break
			done
		fi
		_clerh @ `tty` "screen -x $SCRNAME"
		screen -S $SCRNAME -X echo "$CLE_USER joining" #: send alert to the original session
		screen -x $SCRNAME
	fi
)

# register lscreen function and custom file for transfer to remote sessions
CLE_XFUN="$CLE_XFUN lscreen"
CLE_XFILES="$CLE_XFILES lscreenrc"

